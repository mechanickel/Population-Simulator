using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class Geography
{
    //An enum of all the biomes that exist.
    public enum Biome
    {
        forest = 0,
        grassland = 1,
        swamp = 2,
        mountain = 3,
        tundra = 4,
        water = 5,
        desert = 6
    }

    private Sprite sprite;                          //The image of each geography
    private List<ResourceDeposit> resourceDeposits; //The resource deposits on the geography.
    private Biome biome;                            //The biome of the current geography.

    //The constructor for the geography, it takes in a biome, the base resource deposits that exist on that type of biome and the sprite. These are all generated by the Geography Manager class.
    public Geography(Biome _biome, ResourceDeposit[] baseResourceDeposits, Sprite _sprite)
    {
        resourceDeposits = new List<ResourceDeposit>();
        if (baseResourceDeposits.Length != 0) //If the list of resources about to be added is not zero, then add the list to the geography.
        {
            foreach (ResourceDeposit resDeposit in baseResourceDeposits)
            {
                resourceDeposits.Add(resDeposit);
            }
        }
        biome = _biome;
        sprite = _sprite;
    }

    //Returns the biome
    public Biome GetBiome()
    {
        return biome;
    }

    //Returns the sprite
    public Sprite GetSprite()
    {
        return sprite;    
    }

    //Returns the resource deposits
    public List<ResourceDeposit> GetResourceDeposits()
    {
        return resourceDeposits;
    }

    //Adds the pre-chosen resource deposits to the geography. This is used in the Geography Manager class when randomly generating extra resources.
    public void AddResourceDeposits(List<ResourceDeposit> newResourceDeposits)
    {
        //For each deposit in the list
        foreach (ResourceDeposit newResDeposit in newResourceDeposits)
        {
            //If the number of deposits is not 0, then check if the deposit already exist on the tile, if they do add the yield to the deposit, otherwise add it to the end.
            if (resourceDeposits.Count != 0)
            {
                //Goes through each of the desposits currently on the geography and checks if the new deposit will increase the yield of an existing deposit.
                foreach (ResourceDeposit resDeposit in resourceDeposits)
                {
                    bool isDeposited = false;
                    if (newResDeposit.GetDepositType() == (resDeposit.GetDepositType())) //If this resource type already exists, add the new yield to the yield currently existing.
                    {
                        resDeposit.IncreaseDepositSize(newResDeposit.GetDepositSize());
                        isDeposited = true;
                    }
                    else if (isDeposited) //Otherwise add the deposit to the end.
                    {
                        resourceDeposits.Add(newResDeposit);
                    }
                }
            }
            //Otherwise just add the deposit to the end.
            else
            {
                resourceDeposits.Add(newResDeposit);
            }
        }
    }
}
